package Person;

use utf8::all; 
use DateTime;
use Moose;
use Data::Printer;

my $People = {};

has 'sn' => ( is => 'ro', isa => 'Str', required => 1);

has 'name' => ( is => 'rw', isa => 'Str', required => 1);

has 'sex' => ( is => 'rw', isa => 'Str', required => 1);

has 'id' => ( is => 'rw', isa => 'Str', required => 1);

has 'folk' => ( is => 'rw', isa => 'Str', required => 1);

has 'birth_date' => ( is => 'rw', isa => 'DateTime');

has 'phone' => (is => 'rw', isa => 'Str');

has 'orgnazition' => ( is => 'rw', isa => 'Company', weak_ref => 1);

=pod
before 'sn' => sub {
    my ($self, $param) = @_;
    p $param;
    #say $param;
    #die " You have tried to break the unique rule!\n" if $People->{$param};
}
=cut
sub Get_all {
    shift;
    return $People;
}

sub BUILD {
    my $self = shift;
    warn "You will modify the person which already exist.\n" if $People->{$self->sn}; 
    $People->{$self->sn} = $self;
}

sub get {
    my ($self, $person_sn) = @_;
    die "You should input the sn of person!\n" unless $person_sn;
    return $People->{$person_sn};
}

no Moose;

1;
